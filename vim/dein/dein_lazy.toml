# neosnippet
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
hook_post_source = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <expr><TAB>
\ pumvisible() ? "\<C-n>" :
\ neosnippet#expandable_or_jumpable() ?
\    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
if has('conceal')
set conceallevel=2 concealcursor=niv
endif
'''

#Vim syntax highlighting for Vue components.
[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']

# slim syntax
[[plugins]]
repo = 'slim-template/vim-slim'
on_ft = ['slim']

#type script syntax
[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

# vim起動中に実行
[[plugins]]
repo = 'thinca/vim-quickrun'
on_ft = ["ruby", "python", "perl"]

#入力補助
[[plugins]]
repo = 'kana/vim-smartinput'
on_ft = ["ruby"]
hook_post_source = '''
call smartinput#map_to_trigger('i', '<Space>', '<Space>', '<Space>')
call smartinput#define_rule({
\   'at'    : '(\%#)',
\   'char'  : '<Space>',
\   'input' : '<Space><Space><Left>',
\   })

call smartinput#define_rule({
\   'at'    : '( \%# )',
\   'char'  : '<BS>',
\   'input' : '<Del><BS>',
\   })
call smartinput#map_to_trigger('i', '#', '#', '#')

call smartinput#define_rule({
\   'at'       : '\%#',
\   'char'     : '#',
\   'input'    : '#{}<Left>',
\   'filetype' : ['ruby'],
\   'syntax'   : ['Constant', 'Special'],
\   })

call smartinput#map_to_trigger('i', '<Bar>', '<Bar>', '<Bar>')
call smartinput#define_rule({
\   'at' : '\({\|\<do\>\)\s*\%#',
\   'char' : '<Bar>',
\   'input' : '<Bar><Bar><Left>',
\   'filetype' : ['ruby'],
\    })'})'})
'''

# Rubyのend補完
[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = ["ruby"]

# Rubyのメソッドの定義元にジャンプ
[[plugins]]
repo = 'szw/vim-tags'
on_ft = ["ruby"]

# toml syntax
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# jsonsyntax
[[plugins]]
repo = 'elzr/vim-json'
hook_source='let g:vim_json_syntax_conceal = 0'
on_ft = ['json']
